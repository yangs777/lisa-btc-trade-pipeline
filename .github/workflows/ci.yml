name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.10'
  GCP_PROJECT_ID: 'my-project-779482'
  GCS_BUCKET: 'btc-orderbook-data'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio mypy ruff black safety bandit
    
    - name: Run type checking
      run: mypy --install-types --non-interactive --ignore-missing-imports .
    
    - name: Run linting
      run: |
        ruff check .
        black --check .
    
    - name: Run security checks
      run: |
        safety check
        bandit -r . -ll
    
    - name: Run tests with coverage
      run: pytest --cov=. --cov-report=xml --cov-report=term-missing -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  gcp-validation:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.GCP_PROJECT_ID }}
    
    - name: Validate GCS permissions
      run: |
        gsutil ls gs://${{ env.GCS_BUCKET }}/ || exit 1
    
    - name: Validate Vertex AI pipeline
      run: |
        # Validate pipeline YAML syntax
        python -c "import yaml; yaml.safe_load(open('btc_preprocess_pipeline.yaml'))"

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build -t btc-trading-system:test .
    
    - name: Run Docker security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'btc-trading-system:test'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'